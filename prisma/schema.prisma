// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  full_name   String    @db.VarChar(255)
  email       String    @unique @db.VarChar(255)
  password    String    @db.VarChar(255)
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
  verified_at DateTime?
  tokens      Token[]
  roles       Role[]

  @@map("users")
}

model Token {
  id           Int      @id @default(autoincrement())
  user_id      Int
  randomizer   String   @db.VarChar(5)
  is_blacklist Boolean  @default(false)
  ip           String?  @db.VarChar(45)
  user_agent   String?  @db.Text
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("token")
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique @db.VarChar(255)
  created_at  DateTime     @default(now())
  updated_at  DateTime     @default(now())
  permissions Permission[]
  users       User[]

  @@map("roles")
}

model Permission {
  id         Int      @id @default(autoincrement())
  name       String   @unique @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  roles      Role[]

  @@map("permissions")
}
